@model AppBeneficiarios.Models.BeneficiariosDto

@{
    ViewBag.Title = "CreateBeneficiarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-5">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttribute = new { @class = "form-control", id = "Nombre" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApellidoPaterno, new { htmlAttribute = new { @class = "form-control", id = "ApellidoPaterno" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApellidoMaterno, new { htmlAttribute = new { @class = "form-control", id = "ApellidoMaterno" } })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Curp, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Curp, new { htmlAttribute = new { @class = "form-control", id = "Curp" } })
                        @Html.ValidationMessageFor(model => model.Curp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="date" class="form-control" id="FechaNacimiento"/>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdSexo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select name="Select" class="form-control" id="idSexo">
                            <option value="Select">Seleccionar</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" id="BtnRegistrar"/>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label class="control-label col-md-2">Tel. Casa</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TelefonoDto.StrNumeroCasa, new { htmlAttribute = new { @class = "form-control", placeholder = "Num. Casa", id = "NumeroCasa" } })
                        @Html.ValidationMessageFor(model => model.TelefonoDto.StrNumeroCasa, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Tel. Celular</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TelefonoDto.StrNumeroCelular, new { htmlAttribute = new { @class = "form-control", placeholder = "Num. Celular", id = "NumeroCelular" } })
                        @Html.ValidationMessageFor(model => model.TelefonoDto.StrNumeroCelular, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Tel. Trabajo</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TelefonoDto.StrNumeroTrabajo, new { htmlAttribute = new { @class = "form-control", placeholder = "Num. Trabajo", id = "NumTrabajo" } })
                        @Html.ValidationMessageFor(model => model.TelefonoDto.StrNumeroTrabajo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Calle</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DireccionDto.StrCalle, new { htmlAttribute = new { @class = "form-control", placeholder = "Calle", id = "StrCalle" } })
                        @Html.ValidationMessageFor(model => model.DireccionDto.StrCalle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Num. Interior</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DireccionDto.StrNumInterior, new { htmlAttribute = new { @class = "form-control", placeholder = "Num. Interior", id = "StrNumInterior" } })
                        @Html.ValidationMessageFor(model => model.DireccionDto.StrNumInterior, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Num. Exterior</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DireccionDto.StrNumExterior, new { htmlAttribute = new { @class = "form-control", placeholder = "Num. Exterior", id = "StrNumExterior" } })
                        @Html.ValidationMessageFor(model => model.DireccionDto.StrNumExterior, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {

        $('#idSexo').html('');
        $.ajax({
            type: 'GET',
            url: 'https://localhost:44319/api/Sexos',
            data: '',
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {

                var options = '';
                options += '<option value="Select">Seleccionar</option>';
                for (var i = 0; i < data.length; i++) {
                    options += '<option value="' + data[i].Id + '">' + data[i].StrValor + ' </option>';
                }
                $('#idSexo').append(options);
                toastr.info('Se cargo la información de forma adecuada', { timeOut: 1000, closeButton: true });
                
                },
            error: function (xhr) {
                toastr.error('No se pudo procesar la información de forma adecuada', 'Beneficiarios dice:', { timeOut: 1000, closeButton: true });
                console.log(xhr.responseText);
            }
        });

        $('#idSexo').change(function () {
            var valor = $('#idSexo').val();
            //alert(valor);
        });

        $('#BtnRegistrar').click(function () {

            var sexoId = $('#idSexo').val();
            var BeneficiarioDto = {};
            BeneficiarioDto.Nombre = $('#Nombre').val();
            BeneficiarioDto.ApellidoPaterno = $('#ApellidoPaterno').val();
            BeneficiarioDto.ApellidoMaterno = $('#ApellidoMaterno').val();
            BeneficiarioDto.Curp = $('#Curp').val();
            BeneficiarioDto.FechaNacimiento = $('#FechaNacimiento').val();

            var telefono = {};

            telefono.StrNumeroCasa = $('#NumeroCasa').val();
            telefono.StrNumeroCelular = $('#NumeroCelular').val();
            telefono.StrNumeroTrabajo = $('#NumTrabajo').val();
            BeneficiarioDto.TelefonoDto = telefono;

            var direccion = {};

            direccion.StrCalle = $('#StrCalle').val();
            direccion.StrNumInterior = $('#StrNumInterior').val();
            direccion.StrNumExterior = $('#StrNumExterior').val();
            BeneficiarioDto.DireccionDto = direccion;
            BeneficiarioDto.IdSexo = sexoId;

            $.ajax({
                type: 'POST',
                url: 'https://localhost:44319/api/Beneficiario',
                data: JSON.stringify(BeneficiarioDto),
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    toastr.success('Se guardo de forma adecuada la solicitud', { timeOut: 1000, closeButton: true });
                },
                error: function (xhr) {
                    toastr.error('No se pudo procesar la información de forma adecuada', 'Beneficiarios dice:', { timeOut: 1000, closeButton: true });
                    console.log(xhr.responseText);
                }
            });
        });


        function Limpiar()
        {
            $('#txtsexo').val('');
        }
    });
</script>